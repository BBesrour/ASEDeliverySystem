stages:
  - build
  - docker
  - deploy

build-job: # builds spring boot apps
  image: maven:3.8.7-eclipse-temurin-17
  stage: build
  script:
    - cd microservices/
    - mvn clean install -B
  only:
    changes:
      - microservices/**/*


docker-frontend-job: # build FE image + pushes it to Docker hub
  image: docker:20.10.16
  stage: docker
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - echo "Logging in to Docker Hub..."
    - echo $CI_REGISTRY_PASSWORD | docker login --username=$CI_REGISTRY_USER
    - cd frontend/
    - docker build -t ase40/ui-service:latest .
    - docker push ase40/ui-service:latest
  only:
    - main

docker-backend-job: # builds BE images using jib + pushes to Docker hub
  stage: docker
  image: maven:3.8.7-eclipse-temurin-17
  script:
    - echo "Logging in to Docker Hub..."
    - echo $CI_REGISTRY_PASSWORD | docker login --username=$CI_REGISTRY_USER
    - cd microservices/
    - echo "Deploying to Docker hub... This will take some time."
    - mvn compile jib:build -Djib.to.auth.username=${CI_REGISTRY_USER} -Djib.to.auth.password=${CI_REGISTRY_PASSWORD}
    - echo "Deployment to Docker hub Done!"
  only:
    - main


deploy: # deploys to linode and runs services with docker-compose (pullling from hub)
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
    - eval $(ssh-agent -s)
    - echo "$PRIVATE_SSH" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SSH_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp docker-compose.yml root@139.162.132.244:/root/ # copy docker-compose to linode
    - ssh $SSH_USER@$SSH_IP "echo $CI_REGISTRY_PASSWORD | docker login --username=$CI_REGISTRY_USER && docker compose --env-file ./.env up -d"
  only:
    - main
